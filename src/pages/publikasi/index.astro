---
import Layout from "../../layouts/Layout.astro";
import type { SanityDocument } from "@sanity/client";
import { sanityClient } from "sanity:client";
import imageUrlBuilder from "@sanity/image-url";
import type { SanityImageSource } from "@sanity/image-url/lib/types/types";

const POSTS_QUERY = `*[
  _type == "post"
  && defined(slug.current)
]|order(publishedAt desc)[0...12]{_id, title, slug, publishedAt, mainImage}`;

const posts = await sanityClient.fetch<SanityDocument[]>(POSTS_QUERY);
const { projectId, dataset } = sanityClient.config();
const urlFor = (source: SanityImageSource) =>
  projectId && dataset
    ? imageUrlBuilder({ projectId, dataset }).image(source)
    : null;
const postImageUrl = posts.map(post => post.mainImage
  ? urlFor(post.mainImage)?.width(550).height(310).url()
  : null);
---
<Layout>
<main class="container mx-auto min-h-screen max-w-7xl p-8">
  <h1 class="text-4xl font-bold mb-8">Publikasi</h1>
  <ul class="grid grid-cols-3 gap-x-16 gap-y-4">
    {posts.map((post) => (
        <li class="hover:underline">
          <a href={`/publikasi/${post.slug.current}`}>
            <h2 class="text-xl font-semibold">{post.title}</h2>
            <p>{new Date(post.publishedAt).toLocaleDateString()}</p>
            {
    postImageUrl && (
      <img
        src={post.mainImage ? postImageUrl[posts.indexOf(post)] : ""}
        alt={post.title}
        class="aspect-video rounded-xl mt-2.5"
        width="550"
        height="310"
      />
    )
  }
          </a>
        </li>
      ))}
  </ul>
</main>
</Layout>